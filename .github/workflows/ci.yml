name: Continuous Integration
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-linux:
    name: Build (Linux)
    runs-on: ubuntu-20.04
    steps:
      - name: Install Dependencies
        run: sudo apt-get install -y qt5-default libsdl1.2-dev
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install BASS
        run: |
          mkdir -p examples/include &&
          mkdir -p examples/lib &&
          curl -O https://web.archive.org/web/20230426183337if_/https://www.un4seen.com/files/bass24-linux.zip &&
          unzip -d bass24-linux bass24-linux.zip &&
          cp bass24-linux/bass.h examples/include/ &&
          cp bass24-linux/libs/x86_64/libbass.so examples/lib/
      - name: Build
        run: make
      - name: Build example_bass
        run: make examples/example_bass examples/example_bass-player
  build-macos:
    name: Build (macOS)
    runs-on: macos-12
    env:
      CPPFLAGS: -DGL_SILENCE_DEPRECATION
    steps:
      - name: Install Dependencies
        run: |
          brew update &&
          brew install coreutils qt5 sdl &&
          brew link --force qt5
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install BASS
        run: |
          mkdir -p examples/include &&
          mkdir -p examples/lib &&
          curl -O http://web.archive.org/web/20230425204235if_/https://www.un4seen.com/files/bass24-osx.zip &&
          unzip -d bass24-osx bass24-osx.zip &&
          cp bass24-osx/bass.h examples/include/ &&
          cp bass24-osx/libbass.dylib examples/lib/
      - name: Build
        run: make
      - name: Build example_bass
        run: make examples/example_bass examples/example_bass-player
      - name: Fixup Framework Paths
        run: |
          cd editor &&
          QT5_PREFIX="`brew --prefix qt5`" &&
          macdeployqt editor.app &&
          prefix="`grealpath $QT5_PREFIX`";
          frameworks=(editor.app/Contents/Frameworks/Qt*.framework) &&
          frameworks=("${frameworks[@]#editor.app/Contents/Frameworks/}") &&
          frameworks=("${frameworks[@]%.framework}") &&
          for framework in "${frameworks[@]}"; do
            for target in "${frameworks[@]}"; do
              install_name_tool -change $prefix/lib/$target.framework/Versions/5/$target @executable_path/../Frameworks/$target.framework/Versions/5/$target editor.app/Contents/Frameworks/$framework.framework/$framework;
            done;
          done;
          for plugin in editor.app/Contents/PlugIns/*/*.dylib; do
            for target in "${frameworks[@]}"; do
              install_name_tool -change $prefix/lib/$target.framework/Versions/5/$target @executable_path/../Frameworks/$target.framework/Versions/5/$target $plugin;
            done;
          done;
      - name: Create DMG file
        run: hdiutil create -format UDZO -srcfolder editor/editor.app editor/editor.dmg
      - uses: actions/upload-artifact@v3
        with:
          name: rocket-editor-macos
          path: editor/editor.dmg
  build-windows:
    name: Build (Windows)
    runs-on: windows-2022
    steps:
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          cache: true
          tools: ''
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup MSVC devenv
        uses: ilammy/msvc-dev-cmd@v1
      - name: Build Editor
        run: |
          qmake -tp vc editor/editor.pro
          msbuild editor.vcxproj /v:minimal /property:Configuration=Release /nologo
      - uses: actions/upload-artifact@v3
        with:
          name: rocket-editor-windows
          path: release/editor.exe
